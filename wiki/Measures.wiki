#summary Performance Measurements

= Introduction =

The 


= Create the measure set =

Measures are collected in a *!Measure_Set*.  Each measure has a name, a counter and
a sum of time spent for all the measure.

To declare the measure set, you may use:
{{{
with Util.Measures;

   Perf : Util.Measures.Measure_Set;
}}}

= Measure the implementation =

A measure is made by creating a variable of type *!Stamp*.  The declaration of
this variabe marks the begining of the measure.  The measure ends at the
next call to *Report* 

{{{
with Util.Measures;
...
   declare
      S : Util.Measures.Stamp;
   begin
      ...
      Util.Measures.Report (Perf, S, "Measure for a block");
   end;
}}}

When `Report` is called, the time that ellapsed between the creation of
the `Stamp` variable and the procedure call is computed.  This time is
then associated with the measure title.

= Reporting results =

After measures are collected, the results can be saved in a file or in
an output stream.  When saving the measures, the measure set is cleared.

{{{
   Util.Measures.Write (Perf, "Title of measures",
                        Ada.Text_IO.Standard_Output);
}}}

http://code.google.com/p/ada-util/source/browse/trunk/samples/measures.adb